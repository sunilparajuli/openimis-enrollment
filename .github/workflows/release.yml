name: Build and Release Signed APK

on:
  push:
    branches:
      - main  # Trigger workflow on push to main branch

jobs:
  build:
    name: Build Signed APK
    runs-on: ubuntu-latest

    steps:
      # üì• Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # ‚öôÔ∏è Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # üíæ Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # üîë Decode Keystore from Secrets
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      # üõ†Ô∏è Build Signed APK
      - name: Build Signed APK
        run: |
          cd android
          chmod +x ./gradlew  # Ensure gradlew is executable
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=keystore.jks \
                                     -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
                                     -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
                                     -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}


      # üöÄ Upload Signed APK to GitHub Releases
      - name: Create Release and Upload APK
        uses: softprops/action-gh-release@v2
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
          tag_name: latest
          name: Latest Release from Main Branch
          body: |
            üöÄ **New Signed APK Release**
            - Triggered by a push to the **main** branch.
            - Automatically signed and uploaded via GitHub Actions.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # üßπ Cleanup Keystore
      - name: Remove Keystore
        if: always()
        run: |
          rm -f android/app/keystore.jks
